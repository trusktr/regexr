(()=>{var e={d:(r,o)=>{for(var t in o)e.o(o,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:o[t]})},o:(e,r)=>Object.prototype.hasOwnProperty.call(e,r),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},r={};(()=>{"use strict";function o(e,...r){let o="",t="";const n=[...e.raw],a=n.length-1,l=n[a].match(/\/[gimuy]*$/);let c=!1;n[0].match(/^\//)?l?(n[0]=n[0].replace("/",""),t=l[0].replace("/",""),n[a]=n[a].replace(/\/[gimuy]*$/,"")):c=!0:l&&(c=!0);for(let e=0,t=r.length;e<t;e+=1){const t=r[e];o+=n[e],o+=t instanceof RegExp?t.source:String(t)}if(o+=n[a],c)throw new TypeError(`regex has unmatched slashes, f.e. r\`/foo\` or r\`foo/\` instead of r\`/foo/\`. Input was: ${o}.`);return new RegExp(o,t)}e.r(r),e.d(r,{e:()=>a,escape:()=>n,r:()=>t,regexr:()=>o,version:()=>l});const t=o,n=e=>e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),a=n,l="2.0.2"})();var o=regexr="undefined"==typeof regexr?{}:regexr;for(var t in r)o[t]=r[t];r.__esModule&&Object.defineProperty(o,"__esModule",{value:!0})})();
//# sourceMappingURL=global.js.map